/* ImageMapster
   Version: see $.mapster.version

Copyright 2011 James Treworgy
http://www.outsharked.com/imagemapster
https://github.com/jamietre/ImageMapster

A jQuery plugin to enhance image maps.
*/
(function(a){a.fn.mapster=function(d){var c=a.mapster.impl;
if(a.isFunction(c[d])){return c[d].apply(this,Array.prototype.slice.call(arguments,1));
}else{if(typeof d==="object"||!d){return c.bind.apply(this,arguments);
}else{a.error("Method "+d+" does not exist on jQuery.mapster");
}}};
a.mapster={version:"1.2.5b31",render_defaults:{fade:false,fadeDuration:150,altImage:null,altImageOpacity:0.7,fill:true,fillColor:"000000",fillColorMask:"FFFFFF",fillOpacity:0.5,highlight:null,stroke:false,strokeColor:"ff0000",strokeOpacity:1,strokeWidth:1,includeKeys:"",alt_image:null},defaults:{wrapClass:null,wrapCss:null,onGetList:null,sortList:false,listenToList:false,mapKey:"",mapValue:"",singleSelect:false,listKey:"value",listSelectedAttribute:"selected",listSelectedClass:null,onClick:null,onMouseover:null,onMouseout:null,onStateChange:null,boundList:null,onConfigured:null,configTimeout:10000,noHrefIsMask:true,scaleMap:true,safeLoad:false,areas:[]},shared_defaults:{render_highlight:{fade:true},render_select:{fade:false},staticState:null,selected:null,isSelectable:true,isDeselectable:true},area_defaults:{includeKeys:"",isMask:false},canvas_style:{position:"absolute",left:0,top:0,padding:0,border:0},hasCanvas:null,isTouch:null,windowLoaded:false,map_cache:[],hooks:{},addHook:function(d,c){this.hooks[d]=(this.hooks[d]||[]).push(c);
},callHooks:function(d,c){a.each(this.hooks[d]||[],function(){this.apply(c);
});
},utils:{subclass:function(d,c){var e=new d(),f=function(){e.constructor.apply(this,arguments);
c.apply(this,arguments);
};
f.prototype=e.constructor.prototype;
return f;
},asArray:function(c){return c.constructor===Array?c:this.split(c,",");
},split:function(e){var d,c=e.split(",");
for(d=c.length-1;
d>=0;
d--){c[d]=a.trim(c[d]);
if(!c[d]){c=c.splice(d,1);
}}return c;
},setOpacity:function(c,d){if(!a.mapster.hasCanvas){c.style.filter="Alpha(opacity="+String(d*100)+")";
}else{c.style.opacity=d;
}},updateProps:function(c,d){var e,f=c||{},g=a.isEmptyObject(f)?d:c;
e=[];
a.each(g,function(h){e.push(h);
});
a.each(Array.prototype.slice.call(arguments,1),function(h,j){a.each(j||{},function(k,l){if(!e||a.inArray(k,e)>=0){var i=j[k];
if(typeof i!=="undefined"){if(a.isPlainObject(i)){f[k]=a.extend(f[k]||{},i);
}else{if(i&&i.constructor===Array){f[k]=i.slice(0);
}else{f[k]=j[k];
}}}}});
});
return f;
},isElement:function(c){return(typeof HTMLElement==="object"?c instanceof HTMLElement:c&&typeof c==="object"&&c.nodeType===1&&typeof c.nodeName==="string");
},indexOfProp:function(c,d,f){var e=c.constructor===Array?-1:null;
a.each(c,function(h,g){if(g&&(d?g[d]:g)===f){e=h;
return false;
}});
return e;
},boolOrDefault:function(d,c){return this.isBool(d)?d:c||false;
},isBool:function(c){return typeof c==="boolean";
},ifFunction:function(d,e,c){if(a.isFunction(d)){d.call(e,c);
}},isImageLoaded:function(c){if(typeof c.complete!=="undefined"&&!c.complete){return false;
}if(typeof c.naturalWidth!=="undefined"&&(c.naturalWidth===0||c.naturalHeight===0)){return false;
}return true;
},fader:(function(){var c={},e=0,d=function(g,k,h,f){var i,j,l=a.mapster.utils;
if(typeof g==="number"){j=c[g];
if(!j){return;
}}else{i=l.indexOfProp(c,null,g);
if(i){delete c[i];
}c[++e]=j=g;
g=e;
}h=h||1;
k=(k+(h/10)>h-0.01)?h:k+(h/10);
l.setOpacity(j,k);
if(k<h){setTimeout(function(){d(g,k,h,f);
},f?f/10:15);
}};
return d;
}())},getBoundList:function(g,e){if(!g.boundList){return null;
}var c,d,h=a(),f=e.split(",");
g.boundList.each(function(){for(c=0;
c<f.length;
c++){d=f[c];
if(a(this).is("["+g.listKey+'="'+d+'"]')){h=h.add(this);
}}});
return h;
},setBoundListProperties:function(c,e,d){e.each(function(){if(c.listSelectedClass){if(d){a(this).addClass(c.listSelectedClass);
}else{a(this).removeClass(c.listSelectedClass);
}}if(c.listSelectedAttribute){a(this).attr(c.listSelectedAttribute,d);
}});
},getMapDataIndex:function(e){var d,c;
switch(e.tagName&&e.tagName.toLowerCase()){case"area":c=a(e).parent().attr("name");
d=a("img[usemap='#"+c+"']")[0];
break;
case"img":d=e;
break;
}return d?this.utils.indexOfProp(this.map_cache,"image",d):-1;
},getMapData:function(d){var c=this.getMapDataIndex(d);
if(c>=0){return c>=0?this.map_cache[c]:null;
}},queueCommand:function(e,f,d,c){if(!e){return false;
}if(!e.complete){e.commands.push({that:f,command:d,args:c});
return true;
}return false;
},unload:function(){this.impl.unload();
this.utils=null;
this.impl=null;
a.fn.mapster=null;
a.mapster=null;
a("*").unbind();
}};
var b=a.mapster;
b.Method=function(g,d,c,f){var e=this;
e.name=f.name;
e.output=g;
e.input=g;
e.first=f.first||false;
e.args=f.args?Array.prototype.slice.call(f.args,0):[];
e.key=f.key;
e.func_map=d;
e.func_area=c;
e.name=f.name;
};
b.Method.prototype.go=function(){var f,e,c,g,j,k=this.input,d=[],h=this;
g=k.length;
for(f=0;
f<g;
f++){e=a.mapster.getMapData(k[f]);
if(e){if(b.queueCommand(e,h.input,h.name,h.args)){if(this.first){j="";
}continue;
}c=e.getData(k[f].nodeName==="AREA"?k[f]:this.key);
if(c){if(a.inArray(c,d)<0){d.push(c);
}}else{j=this.func_map.apply(e,h.args);
}if(this.first||typeof j!=="undefined"){break;
}}}a(d).each(function(){j=h.func_area.apply(this,h.args);
});
if(typeof j!=="undefined"){return j;
}else{return this.output;
}};
a.mapster.impl=(function(){var e={},d=a.mapster,i=a.mapster.utils,h,c;
c=function(j){return d.map_cache.push(j)-1;
};
h=function(k){d.map_cache.splice(k.index,1);
for(var j=d.map_cache.length-1;
j>=this.index;
j--){d.map_cache[j].index--;
}};
function f(n,k){var j,l,m=n.options.areas;
if(k){a.each(k,function(p,o){l=i.indexOfProp(m,"key",this.key);
if(l>=0){a.extend(m[l],this);
}else{m.push(this);
}j=n.getDataForKey(this.key);
if(j){a.extend(j.options,this);
}});
}}function g(j,k){var l=i.updateProps({},k);
delete l.areas;
i.updateProps(j.options,l);
f(j,k.areas);
i.updateProps(j.area_options,j.options);
a.each(j.data,function(n,m){m._effectiveOptions=null;
});
}e.get=function(j){return(new d.Method(this,function(){return this.getSelected();
},function(){return this.isSelected();
},{name:"get",args:arguments,key:j,first:true,defaultReturn:""})).go();
};
e.data=function(j){return(new d.Method(this,null,function(){return this;
},{name:"data",args:arguments,key:j})).go();
};
e.highlight=function(j){return(new d.Method(this,function(l){if(j===false){this.ensureNoHighlight();
}else{var k=this._highlightId;
return k>=0?this.data[k].key:null;
}},function(){this.highlight();
},{name:"highlight",args:arguments,key:j,first:true})).go();
};
e.select=function(){e.set.call(this,true);
};
e.deselect=function(){e.set.call(this,false);
};
e.set=function(q,l,r){var n,p,o,k,m,j=[];
function s(t){if(t){switch(q){case true:t.addSelection();
break;
case false:t.removeSelection(true);
break;
default:t.toggleSelection();
break;
}}}k=i.isBool(r)?r:true;
this.each(function(){var t;
o=d.getMapData(this);
if(!o){return true;
}m="";
if(a(this).is("img")){if(d.queueCommand(o,a(this),"set",[q,l,k])){return true;
}if(l instanceof Array){if(l.length){m=l.join(",");
}}else{m=l;
}if(m){a.each(i.split(m),function(v,u){s(o.getDataForKey(u.toString()));
});
if(!q){o.removeSelectionFinish();
}}}else{p=a(this).parent()[0];
if(n&&p!==n){o=d.getMapData(this);
if(!o){return true;
}n=p;
}n=p;
if(d.queueCommand(o,a(this),"set",[q,l,k])){return true;
}t=o.getDataForArea(this);
if(a.inArray(t,j)<0){j.push(t);
m+=m===""?"":","+t.key;
}}});
a.each(j,function(u,t){s(t);
});
if(k&&o.options.boundList){d.setBoundListProperties(o.options,d.getBoundList(o.options,m),q);
}return this;
};
e.unbind=function(j){return(new d.Method(this,function(){this.clearEvents();
this.clearMapData(j);
h(this);
},null,{name:"unbind",args:arguments})).go();
};
e.rebind=function(j,k){return(new d.Method(this,function(){if(k){this.options=i.updateProps({},d.defaults,j);
a.each(this.data,function(){this.options={};
});
}g(this,j);
this.setAreaOptions(j.areas||{});
this.redrawSelections();
},null,{name:"rebind",args:arguments})).go();
};
e.get_options=function(l,k){var j=i.isBool(l)?l:k;
return(new d.Method(this,function(){var m=a.extend({},this.options);
if(j){m.render_select=i.updateProps({},d.render_defaults,m,m.render_select);
m.render_highlight=i.updateProps({},d.render_defaults,m,m.render_highlight);
}return m;
},function(){return j?this.effectiveOptions():this.options;
},{name:"get_options",args:arguments,first:true,key:l})).go();
};
e.set_options=function(j){return(new d.Method(this,function(){g(this,j);
},null,{name:"set_options",args:arguments})).go();
};
e.unload=function(){var j;
for(j=d.map_cache.length-1;
j>=0;
j--){if(d.map_cache[j]){e.unbind.call(a(d.map_cache[j].image));
}}e.graphics=null;
};
e.snapshot=function(){return(new d.Method(this,function(){a.each(this.data,function(k,j){j.selected=false;
});
this.base_canvas=this.graphics.createVisibleCanvas(this.image);
a(this.image).before(this.base_canvas);
},null,{name:"snapshot"})).go();
};
e.state=function(){var j,k=null;
a(this).each(function(){if(this.nodeName==="IMG"){j=d.getMapData(this);
if(j){k=j.state();
}return false;
}});
return k;
};
e.bind=function(j){var k=i.updateProps({},d.defaults,j);
return this.each(function(){var l,m,o,n;
l=a(this);
l.css("border",0);
n=d.getMapData(this);
if(n){e.unbind.apply(l);
if(!n.complete){l.bind();
return true;
}n=null;
}o=this.getAttribute("usemap");
m=o&&a('map[name="'+o.substr(1)+'"]');
if(!(l.is("img")&&o&&m.size()>0)){return true;
}if(!n){n=new d.MapData(this,k);
n.index=c(n);
n.map=m;
n.addImage(this);
n.addImage(null,this.src);
if(a.mapster.hasCanvas){n.addImage(null,k.render_highlight.altImage||k.altImage,"highlight");
n.addImage(null,k.render_select.altImage||k.altImage,"select");
}n.bindImages();
}});
};
e.init=function(l){var k,j;
d.hasCanvas=(document.namespaces&&document.namespaces.g_vml_)?false:a("<canvas></canvas>")[0].getContext?true:false;
d.isTouch="ontouchstart" in document.documentElement;
if(!(d.hasCanvas||document.namespaces)){a.fn.mapster=function(){return this;
};
return;
}if(!i.isBool(a.mapster.defaults.highlight)){d.render_defaults.highlight=!d.isTouch;
}a.extend(d.defaults,d.render_defaults,d.shared_defaults);
a.extend(d.area_defaults,d.render_defaults,d.shared_defaults);
if(i.isBool(l)){d.hasCanvas=l;
}if(a.browser.msie&&!d.hasCanvas&&!document.namespaces.v){document.namespaces.add("v","urn:schemas-microsoft-com:vml");
k=document.createStyleSheet();
j=["shape","rect","oval","circ","fill","stroke","imagedata","group","textbox"];
a.each(j,function(n,m){k.addRule("v\\:"+m,"behavior: url(#default#VML); antialias:true");
});
}a(window).bind("load",function(){d.windowLoaded=true;
a(d.map_cache).each(function(){if(!this.complete&&this.isReadyToBind()){this.initialize();
}});
});
};
e.test=function(j){return eval(j);
};
return e;
}());
a.mapster.impl.init();
}(jQuery));
(function(a){var c,b=a.mapster,d=b.utils;
b.Graphics=function(e){var f=this;
f.hasCanvas=false;
f.active=false;
f.canvas=null;
f.width=0;
f.height=0;
f.shapes=[];
f.masks=[];
f.map_data=e;
};
c=b.Graphics.prototype;
c.begin=function(f,g){var e=a(f);
this.elementName=g;
this.canvas=f;
this.width=e.width();
this.height=e.height();
this.shapes=[];
this.masks=[];
this.active=true;
};
c.addShape=function(f,g){var e=g.isMask?this.masks:this.shapes;
e.push({mapArea:f,options:g});
};
c.createVisibleCanvas=function(e){return a(this.createCanvasFor(e)).addClass("mapster_el").css(b.canvas_style)[0];
};
c._addShapeGroupImpl=function(e,h){var g=this,f=g.map_data;
a.each(e.areas(),function(k,j){var l=j.effectiveRenderOptions(h);
l.isMask=l.isMask||(j.nohref&&f.options.noHrefIsMask);
g.addShape(j,l);
});
};
c.addShapeGroup=function(e,j){var i=this,g,k,f,h=this.map_data,l=e.effectiveRenderOptions(j);
if(j==="select"){k="static_"+e.areaId.toString();
f=h.base_canvas;
}else{f=h.overlay_canvas;
}i.begin(f,k);
if(l.includeKeys){g=d.split(l.includeKeys);
a.each(g,function(o,n){var m=h.getDataForKey(n.toString());
i._addShapeGroupImpl(m,j);
});
}i._addShapeGroupImpl(e,j);
i.render();
if(l.fade){d.fader(f,0,1,l.fadeDuration);
}};
b.initGraphics=function(e){if(e){c.hex_to_decimal=function(f){return Math.max(0,Math.min(parseInt(f,16),255));
};
c.css3color=function(f,g){return"rgba("+this.hex_to_decimal(f.substr(0,2))+","+this.hex_to_decimal(f.substr(2,2))+","+this.hex_to_decimal(f.substr(4,2))+","+g+")";
};
c.renderShape=function(g,j,k){var h,f=j.coords(null,k);
switch(j.shape){case"rect":g.rect(f[0],f[1],f[2]-f[0],f[3]-f[1]);
break;
case"poly":g.moveTo(f[0],f[1]);
for(h=2;
h<j.length;
h+=2){g.lineTo(f[h],f[h+1]);
}g.lineTo(f[0],f[1]);
break;
case"circ":case"circle":g.arc(f[0],f[1],f[2],0,Math.PI*2,false);
break;
}};
c.addAltImage=function(f,g,h,i){f.beginPath();
this.renderShape(f,h);
f.closePath();
f.clip();
f.globalAlpha=i.altImageOpacity;
f.drawImage(g,0,0,h.owner.scaleInfo.width,h.owner.scaleInfo.height);
};
c.render=function(){var h,i,j=this,g=j.masks.length,k=j.createCanvasFor(j.canvas),l=k.getContext("2d"),f=j.canvas.getContext("2d");
if(g){h=j.createCanvasFor(j.canvas);
i=h.getContext("2d");
i.clearRect(0,0,h.width,h.height);
a.each(j.masks,function(n,m){i.save();
i.beginPath();
j.renderShape(i,m.mapArea);
i.closePath();
i.clip();
i.lineWidth=0;
i.fillStyle="#000";
i.fill();
i.restore();
});
}a.each(j.shapes,function(m,n){l.save();
if(n.options.alt_image){j.addAltImage(l,n.options.alt_image,n.mapArea,n.options);
}else{if(n.options.fill){l.beginPath();
j.renderShape(l,n.mapArea);
l.closePath();
l.fillStyle=j.css3color(n.options.fillColor,n.options.fillOpacity);
l.fill();
}}l.restore();
});
a.each(j.shapes.concat(j.masks),function(m,o){var n=o.options.strokeWidth===1?0.5:0;
if(o.options.stroke){l.save();
l.strokeStyle=j.css3color(o.options.strokeColor,o.options.strokeOpacity);
l.lineWidth=o.options.strokeWidth;
l.beginPath();
j.renderShape(l,o.mapArea,n);
l.closePath();
l.stroke();
l.restore();
}});
if(g){i.globalCompositeOperation="source-out";
i.drawImage(k,0,0);
f.drawImage(h,0,0);
}else{f.drawImage(k,0,0);
}j.active=false;
return j.canvas;
};
c.createCanvasFor=function(i){var g=a(i),k=g.width()||g[0].width,j=g.height()||g[0].height,f=a('<canvas width="'+k+'" height="'+j+'"></canvas>')[0];
return f;
};
c.clearHighlight=function(){var f=this.map_data.overlay_canvas;
f.getContext("2d").clearRect(0,0,f.width,f.height);
};
c.removeSelections=function(){};
c.refreshSelections=function(){var f,g=this.map_data;
f=g.base_canvas;
g.base_canvas=this.createVisibleCanvas(g.image);
a(g.base_canvas).hide();
a(f).before(g.base_canvas);
g.redrawSelections();
a(g.base_canvas).show();
a(f).remove();
};
}else{c.renderShape=function(k,m,g){var l=this,n,h,o,j,i,p,f=k.coords();
j=l.elementName?'name="'+l.elementName+'" ':"";
i=g?'class="'+g+'" ':"";
o='<v:fill color="#'+m.fillColor+'" opacity="'+(m.fill?m.fillOpacity:0)+'" /><v:stroke opacity="'+m.strokeOpacity+'"/>';
if(m.stroke){n="strokeweight="+m.strokeWidth+' stroked="t" strokecolor="#'+m.strokeColor+'"';
}else{n='stroked="f"';
}switch(k.shape){case"rect":p="<v:rect "+i+j+' filled="t" '+n+' style="zoom:1;margin:0;padding:0;display:block;position:absolute;left:'+f[0]+"px;top:"+f[1]+"px;width:"+(f[2]-f[0])+"px;height:"+(f[3]-f[1])+'px;">'+o+"</v:rect>";
break;
case"poly":p="<v:shape "+i+j+' filled="t" '+n+' coordorigin="0,0" coordsize="'+l.width+","+l.height+'" path="m '+f[0]+","+f[1]+" l "+f.slice(2).join(",")+' x e" style="zoom:1;margin:0;padding:0;display:block;position:absolute;top:0px;left:0px;width:'+l.width+"px;height:"+l.height+'px;">'+o+"</v:shape>";
break;
case"circ":case"circle":p="<v:oval "+i+j+' filled="t" '+n+' style="zoom:1;margin:0;padding:0;display:block;position:absolute;left:'+(f[0]-f[2])+"px;top:"+(f[1]-f[2])+"px;width:"+(f[2]*2)+"px;height:"+(f[2]*2)+'px;">'+o+"</v:oval>";
break;
}h=a(p);
a(l.canvas).append(h);
return h;
};
c.render=function(){var g,f=this;
a.each(this.shapes,function(j,h){f.renderShape(h.mapArea,h.options);
});
if(this.masks.length){a.each(this.masks,function(j,h){g=d.updateProps({},h.options,{fillOpacity:1,fillColor:h.options.fillColorMask});
f.renderShape(h.mapArea,g,"mapster_mask");
});
}this.active=false;
return this.canvas;
};
c.createCanvasFor=function(g){var f=a(g),j=f.width(),i=f.height();
return a('<var width="'+j+'" height="'+i+'" style="zoom:1;overflow:hidden;display:block;width:'+j+"px;height:"+i+'px;"></var>')[0];
};
c.clearHighlight=function(){a(this.map_data.overlay_canvas).children().remove();
};
c.removeSelections=function(f){if(f>=0){a(this.map_data.base_canvas).find('[name="static_'+f.toString()+'"]').remove();
}else{a(this.map_data.base_canvas).children().remove();
}};
c.refreshSelections=function(){return null;
};
}};
b.initGraphics(b.hasCanvas);
}(jQuery));
(function(a){var c,b=a.mapster,d=b.utils;
b.MapData=function(e,g){var f=this;
this.index=-1;
this.image=e;
this.options=g;
this.area_options=d.updateProps({},b.area_defaults,g);
this.bindTries=g.configTimeout/200;
this.imgCssText=e.style.cssText||null;
this.initializeDefaults();
this.mousedown=function(h){h.preventDefault();
};
this.mouseover=function(j){var i=f.getAllDataForArea(this),h=i.length?i[0]:null,k;
if(h&&!h.owner.resizing){k=h.effectiveOptions();
f.inArea=true;
if(!a.mapster.hasCanvas){this.blur();
}if(f.currentAreaId===h.areaId){return;
}f.clearEffects(true);
h.highlight(!k.highlight);
if(f.options.showToolTip){a.each(i,function(){if(this.effectiveOptions().toolTip){this.showTooltip();
}});
}f.currentAreaId=h.areaId;
if(a.isFunction(f.options.onMouseover)){f.options.onMouseover.call(this,{e:j,options:k,key:h.key,selected:h.isSelected()});
}}};
this.mouseout=function(i){var j,h=f.getDataForArea(this),k=f.options;
if(h&&!h.owner.resizing){f.inArea=false;
f.clearEffects(false);
if(a.isFunction(k.onMouseout)){k.onMouseout.call(this,{e:i,options:k,key:j,selected:h.isSelected()});
}}};
this.clearEffects=function(h){var i=f.options;
if((f.currentAreaId<0||h!==true)&&f.inArea){return;
}f.ensureNoHighlight();
if(i.toolTipClose&&a.inArray("area-mouseout",i.toolTipClose)>=0&&this.activeToolTip){f.cancelClear=false;
window.setTimeout(function(){if(!f.cancelClear){f.clearTooltip();
}f.cancelClear=false;
},50);
}f.currentAreaId=-1;
};
this.click=function(k){var p,l,m,n,i,q=this,h=f.getDataForArea(this),o=f.options;
k.preventDefault();
if(!h||h.owner.resizing){return;
}if(!a.mapster.hasCanvas){this.blur();
}o=f.options;
function j(r){var s;
i=(r.isSelectable()&&(r.isDeselectable()||!r.isSelected()));
if(i){n=!r.isSelected();
}else{n=r.isSelected();
}m=b.getBoundList(o,r.key);
if(a.isFunction(o.onClick)){if(false===o.onClick.call(q,{e:k,listTarget:m,key:r.key,selected:n})){return;
}}if(i){p=r.toggleSelection();
}if(o.boundList&&o.boundList.length>0){b.setBoundListProperties(o,m,r.isSelected());
}s=r.effectiveOptions();
if(s.includeKeys){l=d.split(s.includeKeys);
a.each(l,function(v,u){var t=f.getDataForKey(u.toString());
if(!t.options.isMask){j(t);
}});
}}j(h);
};
this.graphics=new b.Graphics(this);
};
c=b.MapData.prototype;
c.initializeDefaults=function(){this.images=[];
this.imageSources=[];
this.imageStatus=[];
this.altImagesXref={};
this.map=null;
this.base_canvas=null;
this.overlay_canvas=null;
this.imagesAdded=false;
this.imagesLoaded=false;
this.complete=false;
this.commands=[];
this.data=[];
this.mapAreas=[];
this.originalAreaData=[];
this._xref={};
this._highlightId=-1;
this.currentAreaId=-1;
this._tooltip_events=[];
this.scaleInfo=null;
this.inArea=false;
};
c.state=function(){return{complete:this.complete,resizing:this.resizing,zoomed:this.zoomed,zoomedArea:this.zoomedArea,scaleInfo:this.scaleInfo};
};
c.isReadyToBind=function(){return this.imagesAdded&&this.imagesLoaded&&(!this.options.safeLoad||b.windowLoaded);
};
c.addImage=function(g,l,e){var h,f,k,i=this;
function j(){if(i.complete){return;
}h=a.inArray(this,i.images);
if(h<0){throw ("Unable to find ref to image '"+this.src+"'.");
}i.imageStatus[h]=true;
if(a.inArray(false,i.imageStatus)<0&&(!i.options.safeLoad||b.windowLoaded)){i.initialize();
}}function m(n){var o=i.images.push(n)-1;
i.imageSources[o]=k;
i.imageStatus[o]=false;
if(e){i.altImagesXref[e]=o;
}}if(!g&&!l){return;
}f=g;
k=l||a(f).attr("src");
if(!k){throw ("Missing image source");
}if(!f){f=a('<img class="mapster_el" />').hide()[0];
a("body").append(f);
m(f);
a(f).bind("load.mapster",j);
a(f).attr("src",k);
}else{m(f);
}};
c.bindImages=function(g){var e=true,f=this;
f.imagesAdded=true;
if(f.complete){return;
}a.each(f.images,function(j,h){if(!d.isImageLoaded(h)){e=false;
return false;
}});
f.imagesLoaded=e;
if(f.isReadyToBind()){f.initialize();
return;
}if(f.bindTries-->0){window.setTimeout(function(){f.bindImages(true);
},200);
}else{throw ("Images never seemed to finish loading.");
}};
c.altImage=function(e){return this.images[this.altImagesXref[e]];
};
c.wrapId=function(){return"mapster_wrap_"+this.index;
};
c._idFromKey=function(e){return this.complete&&typeof e==="string"&&this._xref.hasOwnProperty(e)?this._xref[e]:-1;
};
c.getSelected=function(){var e="";
a.each(this.data,function(g,f){if(f.isSelected()){e+=(e?",":"")+f.key;
}});
return e;
};
c.getAllDataForArea=function(f){var g,e,k=[],j=this,h=a(f).attr(this.options.mapKey);
if(h){h=d.split(h);
}for(g=0;
g<h.length;
g++){e=j.data[j._idFromKey(h[g])];
k.push(e);
}return k;
};
c.getDataForArea=function(e){var f=this.getAllDataForArea(e);
if(f.length){f[0].area=e.length?e[0]:e;
return f[0];
}else{f.area=null;
return null;
}};
c.getDataForKey=function(e){return this.data[this._idFromKey(e)];
};
c.getData=function(e){if(typeof e==="string"){return this.getDataForKey(e);
}else{if(e&&e.mapster||d.isElement(e)){return this.getDataForArea(e);
}else{return null;
}}};
c.ensureNoHighlight=function(){var e;
if(this._highlightId>=0){this.graphics.clearHighlight();
e=this.data[this._highlightId];
e.changeState("highlight",false);
this._highlightId=-1;
}};
c.setHighlightID=function(e){this._highlightId=e;
};
c.clearSelections=function(){this.graphics.removeSelections();
a.each(this.data,function(g,f){f.selected=false;
});
};
c.setAreaOptions=function(f){var j,g,e,h=f||{};
for(j=h.length-1;
j>=0;
j--){g=h[j];
e=this.getDataForKey(g.key);
if(e){d.updateProps(e.options,g);
if(d.isBool(g.selected)){e.selected=g.selected;
}}}};
c.drawSelections=function(g){var e,f=d.asArray(g);
for(e=f.length-1;
e>=0;
e--){this.data[f[e]].drawSelection();
}};
c.redrawSelections=function(){a.each(this.data,function(g,f){if(f.isSelectedOrStatic()){f.drawSelection();
}});
};
c.initialize=function(){var l,A,G,B,e,g,m,D,k,r,t,v,u,h,p,q,s,E,F,o,w,C,n,x,y=this,z=y.options;
function f(j,H){var i=new b.AreaData(y,j,H);
i.areaId=y._xref[j]=y.data.push(i)-1;
return i.areaId;
}if(y.complete){return;
}y.complete=true;
s=a(y.image);
B=s.parent().attr("id");
if(B&&B.length>=12&&B.substring(0,12)==="mapster_wrap"){G=s.parent();
G.attr("id",y.wrapId());
}else{G=a('<div id="'+y.wrapId()+'"></div>');
if(z.wrapClass){if(z.wrapClass===true){G.addClass(s.attr("class"));
}else{G.addClass(z.wrapClass);
}}}y.wrapper=G;
l=y.graphics.createVisibleCanvas(y.image);
A=y.graphics.createVisibleCanvas(y.image);
y.base_canvas=l;
y.overlay_canvas=A;
y._xref={};
y.data=[];
p=!z.mapKey;
if(p){z.mapKey="data-mapster-key";
}D=(a.browser.msie&&a.browser.version<=7)?"area":(p?"area[coords]":"area["+z.mapKey+"]");
k=a(y.map).find(D);
d.scaleMap(y.image,z.scaleMap,function(i){C=y.scaleInfo=i;
for(r=k.length-1;
r>=0;
r--){h=0;
g=k[r];
e=a(g);
if(!g.coords){continue;
}n=p?"":g.getAttribute(z.mapKey);
w=new b.MapArea(y,g,p||!n?"":n);
v=w.keys;
y.mapAreas.push(w);
x=y.mapAreas.length-1;
for(t=v.length-1;
t>=0;
t--){u=v[t];
if(z.mapValue){q=e.attr(z.mapValue);
}if(p){h=f(y.data.length,q);
o=y.data[h];
o.key=u=h.toString();
}else{h=y._xref[u];
if(h>=0){o=y.data[h];
if(q&&!y.data[h].value){o.value=q;
}}else{h=f(u,q);
o=y.data[h];
}}w.areaDataXref.push(h);
o.areasXref.push(x);
}if(!w.nohref){e.bind("mouseover.mapster",y.mouseover).bind("mouseout.mapster",y.mouseout).bind("click.mapster",y.click).bind("mousedown.mapster",y.mousedown);
}if(p){e.attr("data-mapster-key",u);
}}m={display:"block",position:"relative",padding:0,width:C.width,height:C.height};
if(z.wrapCss){a.extend(m,z.wrapCss);
}if(s.parent()[0]!==y.wrapper[0]){s.before(y.wrapper);
}G.css(m);
for(r=1;
r<y.images.length;
r++){G.append(y.images[r]);
}a(y.images.slice(1)).hide();
s.css(b.canvas_style);
y.images[1].style.cssText=y.image.style.cssText;
G.append(y.images[1]).append(l).append(A).append(s);
d.setOpacity(y.image,0);
d.setOpacity(y.images[1]);
y.setAreaOptions(z.areas);
if(z.isSelectable&&z.onGetList){F=y.data.slice(0);
if(z.sortList){if(z.sortList==="desc"){E=function(j,H){return j===H?0:(j>H?-1:1);
};
}else{E=function(j,H){return j===H?0:(j<H?-1:1);
};
}F.sort(function(j,H){j=j.value;
H=H.value;
return E(j,H);
});
}y.options.boundList=z.onGetList.call(y.image,F);
}y.redrawSelections();
if(y.commands.length){a.each(y.commands,function(H,j){b.impl[j.command].apply(j.that,j.args);
});
y.commands=[];
}if(z.onConfigured&&typeof z.onConfigured==="function"){z.onConfigured.call(s,true);
}});
};
c.clearEvents=function(){a(this.map).find("area").unbind(".mapster");
a(this.images).unbind(".mapster");
};
c._clearCanvases=function(e){if(!e){a(this.base_canvas).remove();
}a(this.overlay_canvas).remove();
};
c.clearMapData=function(f){var e=this;
this._clearCanvases(f);
a.each(this.data,function(h,g){g.reset(f);
});
this.data=null;
if(!f){this.image.style.cssText=this.imgCssText;
a(this.wrapper).before(this.image).remove();
}a.each(this.images,function(g){if(e.images[g]!==this.image){e.images[g]=null;
}});
e.images=[];
this.image=null;
d.ifFunction(this.clearTooltip,this);
};
c.removeSelectionFinish=function(){var e=this.graphics;
e.refreshSelections();
e.clearHighlight();
};
}(jQuery));
(function(a){var c,b=a.mapster,d=b.utils;
b.AreaData=function(f,e,g){this.owner=f;
this.key=e||"";
this.areaId=-1;
this.value=g||"";
this.options={};
this.selected=null;
this.areasXref=[];
this.area=null;
};
c=b.AreaData.prototype;
c.areas=function(){var e,f=[];
for(e=0;
e<this.areasXref.length;
e++){f.push(this.owner.mapAreas[this.areasXref[e]]);
}return f;
};
c.coords=function(g,f){var e=[];
a.each(this.areas(),function(j,h){e=e.concat(h.coords(g,f));
});
return e;
};
c.reset=function(e){a.each(this.areas(),function(g,f){f.reset(e);
});
this.areasXref=[];
this.options=null;
};
c.isSelectedOrStatic=function(){var e=this.effectiveOptions();
return d.isBool(e.staticState)?e.staticState:this.isSelected();
};
c.isSelected=function(){return d.isBool(this.selected)?this.selected:d.isBool(this.owner.area_options.selected)?this.owner.area_options.selected:false;
};
c.isSelectable=function(){return d.isBool(this.effectiveOptions().staticState)?false:(d.isBool(this.owner.options.staticState)?false:this.effectiveOptions().isSelectable);
};
c.isDeselectable=function(){return d.isBool(this.effectiveOptions().staticState)?false:(d.isBool(this.owner.options.staticState)?false:this.effectiveOptions().isDeselectable);
};
c.effectiveOptions=function(f){var e=d.updateProps({},this.owner.area_options,this.options,f||{},{id:this.areaId});
e.selected=this.isSelected();
return e;
};
c.effectiveRenderOptions=function(f,h){var e=this.effectiveOptions(h),g=d.updateProps({},e,e["render_"+f],{alt_image:this.owner.altImage(f)});
return g;
};
c.changeState=function(f,e){if(a.isFunction(this.owner.options.onStateChange)){this.owner.options.onStateChange.call(this.owner.image,{key:this.key,state:f,selected:e});
}};
c.highlight=function(e){var f=this.owner;
if(!e){f.graphics.addShapeGroup(this,"highlight");
}f.setHighlightID(this.areaId);
this.changeState("highlight",true);
};
c.drawSelection=function(){this.owner.graphics.addShapeGroup(this,"select");
};
c.addSelection=function(){var e=this.owner;
if(e.options.singleSelect){e.clearSelections();
}this.drawSelection();
this.selected=true;
this.changeState("select",true);
if(e.options.singleSelect){e.graphics.refreshSelections();
}};
c.removeSelection=function(e){this.selected=false;
this.changeState("select",false);
this.owner.graphics.removeSelections(this.areaId);
if(!e){this.owner.removeSelectionFinish();
}};
c.toggleSelection=function(e){if(!this.isSelected()){this.addSelection();
}else{this.removeSelection(e);
}return this.isSelected();
};
b.MapArea=function(h,e,f){if(!h){return;
}var g=this;
g.owner=h;
g.area=e;
g.areaDataXref=[];
g.originalCoords=[];
a.each(d.split(e.coords),function(k,j){g.originalCoords.push(parseFloat(j));
});
g.length=g.originalCoords.length;
g.shape=e.shape.toLowerCase();
g.nohref=e.nohref||!e.href;
g.keys=d.split(f);
};
b.MapArea.prototype.coords=function(){return this.originalCoords;
};
b.MapArea.prototype.effectiveRenderOptions=function(h){var f,e,g=this.owner,j=d.updateProps({},g.area_options);
for(f=this.keys.length-1;
f>=0;
f--){e=g.getDataForKey(this.keys[f]);
d.updateProps(j,e.effectiveRenderOptions(h),e.options["render_"+h],{alt_image:this.owner.altImage(h)});
}return j;
};
}(jQuery));
(function(a){a.mapster.utils.areaCorners=function(f,q,i){var n,o,l,m,d,b,e,c,g,h,p,k;
n=o=d=e=999999;
l=m=b=c=-1;
for(k=f.length-2;
k>=0;
k-=2){g=parseInt(f[k],10);
h=parseInt(f[k+1],10);
if(g<n){n=g;
c=h;
}if(g>l){l=g;
e=h;
}if(h<o){o=h;
b=g;
}if(h>m){m=h;
d=g;
}}if(q&&i){a([[b-q,o-i],[d,o-i],[n-q,c-i],[n-q,e],[c-i,l],[e,l],[b-q,m],[d,m]]).each(function(r,j){if(j[0]>0&&j[1]>0){p=j;
return false;
}});
}return{tl:[n,o],br:[l,m],tt:p};
};
}(jQuery));
(function(a){var b=a.mapster,d=b.utils,c=b.MapArea.prototype;
b.utils.getScaleInfo=function(h,g,i,e){var f;
if(!i&&!e){f=1;
}else{f=i/h||e/g;
if(f>0.98&&f<1.02){f=1;
}}return{scale:(f!==1),scalePct:f,realWidth:h,realHeight:g,width:i,height:e,ratio:i/e};
};
b.utils.scaleMap=function(h,n,e){var j,l,m,o,g,i=a(h),k=this;
if(!i.length){return;
}o=i.width();
g=i.height();
function f(){if(!l){l=this.height;
m=this.width;
e(k.getScaleInfo(m,l,o,g));
}}if(n){j=new Image();
j.onload=f;
j.src=h.src;
if(j.width&&j.height){f.call(j);
}}else{l=g;
m=o;
}};
b.MapData.prototype.resize=function(n,l,f){var j,p,r,i,e,o={},m,g,k=this;
if(typeof n==="object"){o=n;
}else{o.width=n;
o.height=l;
o.duration=f;
}r=o.width;
i=o.height;
e=o.duration||1000;
if(k.scaleInfo.width===r&&k.scaleInfo.height===i){return;
}j=k._highlightId;
function q(s,u,t){if(a.mapster.hasCanvas){s.width=u;
s.height=t;
}else{a(s).width(u);
a(s).height(t);
}}function h(){q(k.overlay_canvas,r,i);
if(o.highlight){if(j>=0){var s=k.data[j];
s.tempOptions={fade:false};
k.getDataForKey(s.key).highlight();
s.tempOptions=null;
}}q(k.base_canvas,r,i);
k.redrawSelections();
k.resizing=false;
if(a.isFunction(o.callback)){o.callback();
}}if(!r){p=i/k.scaleInfo.realHeight;
r=Math.round(k.scaleInfo.realWidth*p);
}if(!i){p=r/k.scaleInfo.realWidth;
i=Math.round(k.scaleInfo.realHeight*p);
}m={width:String(r)+"px",height:String(i)+"px"};
if(!a.mapster.hasCanvas){a(k.base_canvas).children().remove();
}g=a(k.wrapper).find(".mapster_el");
if(k.resizing&&o.force){a(g).stop();
}k.resizing=true;
if(o.duration){g.each(function(t,s){a(s).animate(m,{duration:e,complete:t===0?h:null,easing:"linear"});
});
a(k.wrapper).animate({scrollLeft:o.scrollLeft||0,scrollTop:o.scrollTop||0},{duration:e,easing:"linear"});
}else{g.css(m);
h();
}a(this.image).css(m);
k.scaleInfo=d.getScaleInfo(k.scaleInfo.realWidth,k.scaleInfo.realHeight,r,i);
a.each(k.data,function(t,s){a.each(s.areas,function(v,u){u.resize();
});
});
};
b.MapArea=d.subclass(b.MapArea,function(){if(this.owner.scaleInfo.scale){this.resize();
}});
c.coords=function(k,e){var f,g=[],i=k||this.owner.scaleInfo.scalePct,h=e||0;
if(i===1&&e===0){return this.originalCoords;
}for(f=0;
f<this.length;
f++){g.push(Math.round(this.originalCoords[f]*i)+h);
}return g;
};
c.resize=function(){this.area.coords=this.coords().join(",");
};
c.reset=function(){this.area.coords=this.coords(1).join(",");
};
b.impl.resize=function(g,f,e){if(!g&&!f){return false;
}return(new b.Method(this,function(){this.resize(g,f,e);
},null,{name:"resize",args:arguments})).go();
};
b.impl.zoom=function(e,g){var f=g||{};
function h(i){var w,j,m,A,t,k,l,u,v,q,r,p,o,y,z,s=f.padding||0,x=i?20:0,n=this,B=false;
if(i){if(!n.zoomed){n.zoomed=true;
n.preZoomWidth=n.scaleInfo.width;
n.preZoomHeight=n.scaleInfo.height;
n.zoomedArea=i;
if(f.scroll){n.wrapper.css({overflow:"auto"});
}}j=a.mapster.utils.areaCorners(i.coords(1,0));
A=n.wrapper.innerWidth()-x-s*2;
m=n.wrapper.innerHeight()-x-s*2;
k=j.maxX-j.minX;
l=j.maxY-j.minY;
u=A/k;
v=m/l;
t=Math.min(u,v);
q=(A-k*t)/2;
r=(m-l*t)/2;
p=n.scaleInfo.realWidth*t;
o=n.scaleInfo.realHeight*t;
y=(j.minX)*t-s-q;
z=(j.minY)*t-s-r;
}else{if(!n.zoomed){return;
}B=true;
p=n.preZoomWidth;
o=n.preZoomHeight;
y=null;
z=null;
}this.resize({width:p,height:o,duration:f.duration,scroll:w,scrollLeft:y,scrollTop:z,callback:(function(){var D=B,E=f.scroll,C=i;
return function(){if(D){n.preZoomWidth=null;
n.preZoomHeight=null;
n.zoomed=false;
n.zoomedArea=false;
if(E){n.wrapper.css({overflow:"inherit"});
}}else{n.zoomedArea=C;
}};
}())});
}return(new b.Method(this,function(i){h.call(this);
},function(){h.call(this.owner,this);
},{name:"zoom",args:arguments,first:true,key:e})).go();
};
}(jQuery));
(function(a){var b=a.mapster,c=b.utils;
a.extend(b.defaults,{toolTipContainer:'<div class="mapster-tooltip" style="border: 2px solid black; background: #EEEEEE; position:absolute; width:160px; padding:4px; margin: 4px; -moz-box-shadow: 3px 3px 5px #535353; -webkit-box-shadow: 3px 3px 5px #535353; box-shadow: 3px 3px 5px #535353; -moz-border-radius: 6px 6px 6px 6px; -webkit-border-radius: 6px; border-radius: 6px 6px 6px 6px;"></div>',showToolTip:false,toolTipFade:true,toolTipClose:["area-mouseout"],onShowToolTip:null,onCreateTooltip:null});
a.extend(b.area_defaults,{toolTip:null});
b.MapData.prototype.clearTooltip=function(){if(this.activeToolTip){this.activeToolTip.remove();
this.activeToolTip=null;
this.activeToolTipID=-1;
}a.each(this._tooltip_events,function(f,d){d.object.unbind(d.event);
});
};
b.MapData.prototype.bindTooltipClose=function(h,d,g){var e=d+".mapster-tooltip",f=this;
if(a.inArray(h,this.options.toolTipClose)>=0){g.unbind(e).bind(e,function(){f.clearTooltip();
});
this._tooltip_events.push({object:g,event:e});
}};
b.AreaData.prototype.showTooltip=function(){var l,h,n,m,f,g,e,j=this.effectiveOptions(),i=this.owner,d=i.options,k=i.options.toolTipContainer;
i.cancelClear=true;
if(i.activeToolTipID===this.areaId){return;
}if(typeof k==="string"){e=a(k);
}else{e=a(k).clone();
}l=e.html(j.toolTip).hide();
if(this.area){g=c.split(this.area.coords,",");
}else{g=[];
a.each(this.areas(),function(p,o){g=g.concat(o.coords());
});
}i.clearTooltip();
a(i.image).after(l);
i.activeToolTip=l;
i.activeToolTipID=this.areaId;
f=c.areaCorners(g,l.outerWidth(true),l.outerHeight(true));
h=f.tt[0];
n=f.tt[1];
m={left:h+"px",top:n+"px"};
if(!l.css("z-index")||l.css("z-index")==="auto"){m["z-index"]="2000";
}l.css(m).addClass("mapster_tooltip");
i.bindTooltipClose("area-click","click",a(i.map));
i.bindTooltipClose("tooltip-click","click",l);
if(i.options.toolTipFade){c.setOpacity(l[0],0);
l.show();
c.fader(l[0],0,1,j.fadeDuration);
}else{l.show();
}c.ifFunction(d.onShowToolTip,this.area||null,{toolTip:l,areaOptions:j,key:this.key,selected:this.isSelected()});
};
b.impl.tooltip=function(d){return(new b.Method(this,function(){this.clearTooltip();
},function(){if(this.effectiveOptions().toolTip){this.showTooltip();
}},{name:"tooltip",args:arguments,key:d})).go();
};
}(jQuery));
